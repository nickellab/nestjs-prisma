steps:
  - id: PreBuild
    name: 'bash'
    script: |
      #!/usr/bin/env bash
      echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" >> .npmrc
    secretEnv: ['GITHUB_TOKEN']
    waitFor: ['-']
  # SQL Proxy
  - name: 'gcr.io/cloudsql-docker/gce-proxy:1.15'
    args:
      - '/cloud_sql_proxy'
      - '-dir=/cloudsql'
      - '-instances=$_INSTANCE_CONNECTION_NAME'
    volumes:
      - name: cloudsql
        path: /cloudsql
    waitFor: ['-']

  # Build the container image
  - id: App:Build
    name: 'gcr.io/kaniko-project/executor:latest'
    args:
      - '--destination=$_DOCKER_PKG/$PROJECT_ID/$_REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '--cache=true'
      - '--cache-ttl=6h'
      - '--build-arg=_NEXT_PUBLIC_ENV1=$_NEXT_PUBLIC_ENV1'
      - '--build-arg=_NEXT_PUBLIC_ENV2=$_NEXT_PUBLIC_ENV2'
    waitFor: ['PreBuild']

  - id: Migrate:Build
    name: 'docker'
    args:
      - 'build'
      - '--no-cache'
      - '-f'
      - 'Dockerfile.migrate'
      - '-t'
      - '$_DOCKER_PKG/$PROJECT_ID/$_REPO_NAME/$_SERVICE_NAME/migrate:$COMMIT_SHA'
      - '.'
    waitFor: ['PreBuild']

  - id: Migrate:Run
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker run -e DATABASE_URL=$$DATABASE_URL -v cloudsql:/cloudsql -w /app $_DOCKER_PKG/$PROJECT_ID/$_REPO_NAME/$_SERVICE_NAME/migrate:$COMMIT_SHA sh -c 'pnpm prisma migrate deploy'
    secretEnv: ['DATABASE_URL']
    volumes:
      - name: cloudsql
        path: /cloudsql
    waitFor: ['Migrate:Build']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - $_SERVICE_NAME
      - '--image'
      - '$_DOCKER_PKG/$PROJECT_ID/$_REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '--region'
      - '$_DEPLOY_REGION'

  - id: Proxy:Stop
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'sh'
    args:
      - '-c'
      - 'docker ps -q --filter ancestor="gcr.io/cloudsql-docker/gce-proxy:1.15" | xargs docker stop'
    waitFor: ['Migrate:Run']

substitutions:
  _DOCKER_PKG: asia-northeast1-docker.pkg.dev
  _REPO_NAME: xxxxxxxxxxxxxx
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/$_DATABASE_URL_SECRET/versions/latest
      env: 'DATABASE_URL'
    - versionName: projects/$PROJECT_ID/secrets/$_GITHUB_TOKEN_SECRET/versions/latest
      env: 'GITHUB_TOKEN'
